//Bruteforce


class Solution {
public:
    string reverseWords(string s) {
        string s1="", str="";
        int f=0;
        for(int i=s.length()-1; i>=0; --i){
            if(s[i]!=' '){
                s1=s1+s[i];
                f=1;
            }
            else{
                reverse(s1.begin(),s1.end());
                str=str+s1;
                if(f==1){
                    str=str+' ';
                }
                s1="";
                f=0;
            }
        }
        reverse(s1.begin(),s1.end());
        str=str+s1;
        while(str[str.length()-1]==' ')str.pop_back();
        return str;
    }
};



//optimized-01
class Solution {
public:
    string reverseWords(string s) {
        vector<string>v;
        string s1="";
        int f=0;
        for(int i=0; i<s.length(); ++i){
            if(s[i]!=' '){
                s1=s1+s[i];
                f=1;
            }else{
                if(f==1){
                    v.push_back(s1);
                }
                f=0;
                s1="";
            }
        }
        if(f==1)
            v.push_back(s1);
        s1="";
        reverse(v.begin(),v.end());
        for(int i=0; i<v.size(); i++){
            s1=s1+v[i];
            if(i!=v.size()-1)s1=s1+' ';
        }

        return s1;
    }
};



//optimizated 02
class Solution {
public:
    string reverseWords(string s) {
        string s1="",s2="";
        int f=0;
        for(int i=s.length()-1; i>=0; --i){
            if(s[i]!=' '){
                s1=s[i]+s1;
                f=1;
            }else{
                s2=s2+s1;
                if(f==1){
                    s2=s2+' ';
                }
                f=0;
                s1="";  
            }
        }
        s2=s2+s1;
        while(s2[s2.length()-1]==' ')s2.pop_back();
        return s2;
    }
};
